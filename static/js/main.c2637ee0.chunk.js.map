{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGoods","removeGood","good","setState","filter","elem","addGood","clear","this","className","length","slice","join","titleRender","type","onClick","classNames","goodsFromServer","map","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8PAAe,GACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,U,OCAIA,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAAAJ,GAAK,MACjB,CAAEC,cAAeD,EAAMC,cAAcI,QAAO,SAAAC,GAAI,OAAIA,IAASH,U,EAIjEI,QAAU,SAACJ,GACT,EAAKC,UAAS,SAAAJ,GAAK,MACjB,CAAEC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,S,EAI9CK,MAAQ,WACN,EAAKJ,SAAS,CAAEH,cAAe,M,4CAGjC,WAAU,IAAD,OACCA,EAAkBQ,KAAKT,MAAvBC,cAeR,OACE,sBAAKS,UAAU,QAAf,UACE,oBAAIA,UAAU,QAAd,SAfgB,WAClB,OAAQT,EAAcU,QACpB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUV,EAAV,gBAEF,QACE,MAAM,GAAN,OAAUA,EAAcW,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDZ,EAAcA,EAAcU,OAAS,GAA5F,kBAOCG,KAEFb,EAAcU,OAAS,GACtB,wBACEI,KAAK,SACLC,QAAS,kBAAM,EAAKR,SACpBE,UAAWO,IACT,aACA,oBALJ,kCAWF,oBAAIP,UAAU,QAAd,SACGQ,EAAgBC,KAAI,SAAAhB,GAAI,OACvB,qBAEEO,UAAWO,IACT,OACA,aACA,oBACA,CACE,iBAAkBhB,EAAcmB,SAASjB,KAP/C,UAWGA,EACD,qBAAKO,UAAU,eAAf,SACGT,EAAcmB,SAASjB,GACtB,wBACEY,KAAK,SACLL,UAAU,iBACVM,QAAS,kBAAM,EAAKd,WAAWC,IAHjC,oBAQA,wBACEY,KAAK,SACLL,UAAU,oBACVM,QAAS,kBAAM,EAAKT,QAAQJ,IAH9B,wBArBCA,e,GAzDDkB,IAAMC,WA+FTvB,ICtGfwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c2637ee0.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nimport goodsFromServer from './goods';\n\ninterface State {\n  selectedGoods: string[],\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  removeGood = (good: string) => {\n    this.setState(state => (\n      { selectedGoods: state.selectedGoods.filter(elem => elem !== good) }\n    ));\n  };\n\n  addGood = (good: string) => {\n    this.setState(state => (\n      { selectedGoods: [...state.selectedGoods, good] }\n    ));\n  };\n\n  clear = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    const titleRender = () => {\n      switch (selectedGoods.length) {\n        case 0:\n          return 'No goods selected';\n\n        case 1:\n          return `${selectedGoods} is selected`;\n\n        default:\n          return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[selectedGoods.length - 1]} are selected`;\n      }\n    };\n\n    return (\n      <div className=\"level\">\n        <h1 className=\"title\">\n          {titleRender()}\n        </h1>\n        {selectedGoods.length > 0 && (\n          <button\n            type=\"button\"\n            onClick={() => this.clear()}\n            className={classNames(\n              'level-item',\n              'button is-danger',\n            )}\n          >\n            Clear selected goods\n          </button>\n        )}\n        <ul className=\"level\">\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={classNames(\n                'good',\n                'level-item',\n                'has-text-centered',\n                {\n                  'good--selected': selectedGoods.includes(good),\n                },\n              )}\n            >\n              {good}\n              <div className=\"good__button\">\n                {selectedGoods.includes(good) ? (\n                  <button\n                    type=\"button\"\n                    className=\"button is-link\"\n                    onClick={() => this.removeGood(good)}\n                  >\n                    Remove\n                  </button>\n                ) : (\n                  <button\n                    type=\"button\"\n                    className=\"button is-primary\"\n                    onClick={() => this.addGood(good)}\n                  >\n                    Select\n                  </button>\n                )}\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}